plugins {
	id 'java'
	id 'maven'
	id 'signing'
    id 'pl.allegro.tech.build.axion-release' version '1.3.5'
}

repositories {
	mavenCentral()
}


dependencies {
	compile 'org.reflections:reflections:0.9.10'
	testCompile 'junit:junit:4.12'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
}

signing {
	keyId='63299E3C0E106645025136688B0213EBE7C2F2DC'
	password=getPassword('public key password')
	secretKeyRingFile='~/.gnupg/pubring.kbx'

    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: getUsername('sonatypeUsername'), password: getPassword('sonatypePassword'))
            }

            pom.project {
               name 'Chess'
               packaging 'jar'
               description 'A simples chess game'
               url 'https://github.com/marcelotomazini/chess'

               scm {
                   url 'scm:git@github.com:marcelotomazini/chess.git'
                   connection 'scm:git@github.com:marcelotomazini/chess.git'
                   developerConnection 'scm:git@github.com:marcelotomazini/chess.git'
               }

               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'marcelotomazini'
                       name 'Marcelo Tomazini'
                   }
               }
           }
        }
    }
}

scmVersion {
    tag {
        prefix = 'com.marcelotomazini.boardgames.chess'
    }
}

project.version = scmVersion.version

def getUsername(name) {
    def username = ''
	new SwingBuilder().edt {
  		dialog(modal: true,
			title: 'Please enter your ' + name,
			alwaysOnTop: true,
			resizable: false,
			locationRelativeTo: null,
			pack: true,
			show: true
		) {
			vbox {
				input = textField()
				button(defaultButton: true, text: 'OK', actionPerformed: {
					username = input.text;
					dispose();
				})
    	}
	}
	return username
}

def getPassword(name) {
	def pass = ''
	new SwingBuilder().edt {
  		dialog(modal: true,
			title: 'Please enter your ' + name,
			alwaysOnTop: true,
			resizable: false,
			locationRelativeTo: null,
			pack: true,
			show: true
		) {
			vbox {
				input = passwordField()
				button(defaultButton: true, text: 'OK', actionPerformed: {
					pass = input.password;
					dispose();
				})
    	}
	}
	return pass
}